#!/bin/bash

## Copyright 2022 Intel Corporation
## SPDX-License-Identifier: MIT

if [ -n "$OFS_ASP_ENV_DEBUG_INSTALL_SCRIPT" ]; then
  set -x
fi

ASP_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../.. && pwd )"

###############################################################################
# Check return code and exit with error message if not 0
# Arguments:
#   Return code to check
#   Error message printed on failure
###############################################################################
check_res() {
  local ret_code="$1"
  local msg="$2"
  if [ "$ret_code" -ne 0 ]; then
    echo "Error: $msg" >&2
    exit "$ret_code"
  fi
}

###############################################################################
# Print error message and exit
# Arguments
#   Error message to print
###############################################################################
error() {
  echo "Error: $1" >&2
  exit 1
}

###############################################################################
# Call script to configure permissions needed for using OFS card
###############################################################################
configure_permission() {
  /usr/bin/env bash "$ASP_ROOT/linux64/libexec/setup_permissions.sh"
  check_res $? "Error: 'setup_permissions.sh' script failed"
}


###############################################################################
# Main script logic
###############################################################################

if [ -z "$OFS_ASP_ENV_NO_PERMISSIONS_INSTALL" ]; then
  configure_permission
fi

echo "Intel OFS oneAPI-ASP install complete."
echo "Run 'aocl diagnose' to list devices or 'aocl initialize <dev_name> <board_variant> to load default image"
